#!/usr/bin/env node
'use strict';
const path = require('path');
const pkg = require('../package.json');
const App = (process.env.NODE_ENV === 'development') ? require('../src/') : require('../dist/');

const gutil  = require('gulp-util');
const argv = require('yargs')
    .usage('Usage: nejc [options]')

    .alias('c', 'config')
    .describe('c', '配置文件')
    .default('c', './nejc.config.js')

    .alias('s', 'src')
    .describe('s', 'source code')
    .default('s', 'src')

    .alias('e', 'ext')
    .describe('e', 'ext files')
    .default('e', '.js')


    .alias('d', 'dist')
    .describe('d', 'dist code')
    .default('d', 'dist')

    .alias('if', 'ignoreFiles')
    .describe('if', 'ignored files')
    .default('if', '')

    .alias('ie', 'ignoreExt')
    .describe('ie', 'ignored ext')
    .default('ie', '')

    .alias('v', 'version')
    .describe('v', 'Show version')
    .version(() => `v${pkg.version}`)

    .help('h')
    .alias('h', 'help')

    .example('nejc -s src -d dist -if ignore.js -ie .es6,.html')
    .argv;

const src = argv.s,
    config = argv.c,
    dist = argv.d,
    ignoreFiles = argv.ignoreFiles.split(','),
    ignoreExt = argv.ignoreExt.split(','),
    ext = argv.ext.split(',');


let configOption;
try {
    configOption = require(path.resolve(process.cwd(), config));
} catch (e) {
    gutil.log(gutil.colors.magenta('warning'),'init', 'config file not found');
    process.exit(1);
}

App();
